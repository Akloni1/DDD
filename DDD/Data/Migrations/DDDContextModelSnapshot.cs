// <auto-generated />
using System;
using DDD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DDD.Data.Migrations
{
    [DbContext(typeof(DDDContext))]
    partial class DDDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DDD.Models.Buyer", b =>
                {
                    b.Property<int>("IdBuyer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBuyer"));

                    b.Property<int>("IdBuyerRoot")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TypeCard")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.HasKey("IdBuyer");

                    b.HasIndex("IdBuyerRoot");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("DDD.Models.BuyerRoot", b =>
                {
                    b.Property<int>("IdBuyerRoot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBuyerRoot"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdBuyerRoot");

                    b.ToTable("BuyersRoot");
                });

            modelBuilder.Entity("DDD.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOrder"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("IdOrderRoot")
                        .HasColumnType("integer");

                    b.Property<string>("ListDecoctions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.HasKey("IdOrder");

                    b.HasIndex("IdOrderRoot");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DDD.Models.OrderRoot", b =>
                {
                    b.Property<int>("IdOrderRoot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOrderRoot"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdOrderRoot");

                    b.ToTable("OrdersRoot");
                });

            modelBuilder.Entity("DDD.Models.Buyer", b =>
                {
                    b.HasOne("DDD.Models.BuyerRoot", "BuyerRoot")
                        .WithMany("Buyers")
                        .HasForeignKey("IdBuyerRoot")
                        .IsRequired()
                        .HasConstraintName("FK_BuyerRoot_Buyers");

                    b.Navigation("BuyerRoot");
                });

            modelBuilder.Entity("DDD.Models.Order", b =>
                {
                    b.HasOne("DDD.Models.OrderRoot", "OrderRoot")
                        .WithMany("Orders")
                        .HasForeignKey("IdOrderRoot")
                        .IsRequired()
                        .HasConstraintName("FK_OrderRoot_Orders");

                    b.Navigation("OrderRoot");
                });

            modelBuilder.Entity("DDD.Models.BuyerRoot", b =>
                {
                    b.Navigation("Buyers");
                });

            modelBuilder.Entity("DDD.Models.OrderRoot", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
